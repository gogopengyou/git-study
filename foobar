git clone https://github.com/gogopengyou/git-study.git

git status
git config --system alias.st status
git config --get user.name
git log

git config --global user.name xxx
git config --global user.email xxx

git add *
git commit -m "first commit."
git commit --amend 

git init
git remote add origin https://github.com/gogopengyou/git-study.git
git push origin master
git pull origin master

git diff #工作区 vs 暂存区(add)
git diff HEAD #工作区 vs 版本库
git diff master #工作区 vs 版本库
git diff origin master #工作区 vs 远端版本库
git diff --cached #暂存区(add) vs 版本库

git stash
git checkout (切换分支)
git merge (合并分支)
git branch -v (查看当前分支)

git log --oneline

git reset xxx_path (cancel add stage)
git reflog  (sample: HEAD@{3})
git reset --hard 版本号
git reset --mixed 版本号 =>(default) git reset 版本号

git cat-file -p 版本号
HEAD
HEAD^ <=> HEAD~1
HEAD^^ <=> HEAD~2
(attention: windows cmd '^^' <=> '^',git bash OK!)

WIP(woke in process.modified stashed. untracked file will not stash ~)
tip:暂存区和工作区的变化都会被隐藏起来，如果隐藏的变化有更改进度将恢复失败，会提示提交后再恢复、合并
git stash list 
git stash pop
git stash apply

tip: clean untracked file 
git clean -nd
git clean -fd

git tag -m "xxx" tag_name
git describe

git rm
git commit~

git status -sb
git log --oneline --decorate


git branch -a
git branch xxx
git merge xxx (切回主线合并)
git branch -d xxx
git push origin local_branch:remote_branch
git push origin  :remote_branch (git branch -d -r branchname)

git push origin master --tags
tip: tag只是一个快照并不能直接更改，但是可以基于该快照创建分支，然后合并到主干 git checkout -b branch_name tag_name


